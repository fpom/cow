##
## general configuration options
##

[COW]
# URL on which ttyd will be reachable, parametrized with {port} and {key}
#
# For example, a reverse proxy may redirect
# "hostname/ttyd/{port}/{key}/" to "localhost:{port}/{key}/"
# in which case you may use "https://hostname/ttyd/{port}/{key}/"
#
# Default value "http://localhost:{port}/{key}/" is for direct connection
# when the server is run locally
TTYD_URL = http://localhost:{port}/{key}/

# timeout before to kill ttyd, default to 6 minutes (360 seconds)
TTYD_TIMEOUT = 360

# same has TTYD but for XPRA
XPRA_URL = http://localhost:{port}/?password={password}
XPRA_TIMEOUT = 600

# where to store user's files
TMPDIR = /tmp

# secret key to secure cookies
# put whatever you want, keep it secret
SECRET_KEY = "secret random stuff"

# what to print on term before compilation
# may contain ANSI escape codes for colors
GCC_BANNER = "\\033[1;31mCOMPILING\\033[0m"

# what to print on term between compilation and execution
# may contain ANSI escape codes for colors
RUN_BANNER = "\\n\\n\\033[1;31mRUNNING\\033[0m"

# what to print on term when compilation/execution is finished
# may contain ANSI escape codes for colors
END_BANNER = "\\n\\n\\033[1;31mALL DONE, type ENTER to finish\\033[0m"

# what to print as a fake prompt for Makefile commands
# may contain ANSI escape codes for colors
MAKE_PROMPT = "\\033[1;32m#\\033[0m "

# authentication:
#  - None  => no authentication
#  - "CAS" => CAS authentication
AUTH = None

# when AUTH = "CAS", server URL
CAS_SERVER = https://sso.pdx.edu

##
## environment variables
##

[ENV]
# set environment variables, use $VAR to substitute with existing value
# for instance, if ttyd is in /opt/bin, you may need to use:
# PATH = /opt/bin:$PATH
    
##
## languages specific configuration options
##

[LANG:C]
# set to False to disable the language in CoW
ENABLED = True
# human-readable name of the language
NAME = C
# file extensions, the first one will be used for new files
EXT = .c, .h
# path to codemirror mode, relative to static/cm/mode
MODE = clike/clike.js
# mode name to be used to initialise codemirror
# it's usually the file stem but for clike it does not work
MODENAME = text/x-csrc
# compiler command-line (linker is gcc and not yet configurable)
# see https://airbus-seclab.github.io/c-compiler-security/gcc_compilation.html
CMD = gcc -c -g -O2 -Wall -Wextra -Wpedantic -Wformat=2 -Wformat-overflow=2 -Wformat-truncation=2 -Wformat-security -Wnull-dereference -Wstack-protector -Wtrampolines -Walloca -Wvla -Warray-bounds=2 -Wimplicit-fallthrough=3 -Wtraditional-conversion -Wshift-overflow=2 -Wcast-qual -Wstringop-overflow=4 -Wconversion -Wint-conversion -Wlogical-op -Wduplicated-cond -Wduplicated-branches -Wformat-signedness -Wshadow -Wstrict-overflow=4 -Wundef -Wstrict-prototypes -Wswitch-default -Wswitch-enum -Wstack-usage=1000000 -Wcast-align=strict -D_FORTIFY_SOURCE=2 -fstack-protector-strong -fstack-clash-protection -fPIE -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack -Wl,-z,separate-code

[LANG:PROCESSING]
# Processing is disabled because it does not work behind Apache reverse proxy
ENABLED = False
NAME = Processing
EXT = .pde
MODE = clike/clike.js
CMD = processing-java

[LANG:PYTHON]
ENABLED = True
NAME = Python
EXT = .py
MODE = python/python.js
CMD = python3

[LANG:HRM]
ENABLED = True
NAME = Human Resource Machine
EXT = .hrm
MODE = hrm/hrm.js
CMD = hrmi -v